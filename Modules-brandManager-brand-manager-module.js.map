{"version":3,"sources":["webpack:///./src/app/Modules/brandManager/brand-manager.component.html","webpack:///./src/app/Modules/brandManager/brand-manager.component.scss","webpack:///./src/app/Modules/brandManager/brand-manager.component.ts","webpack:///./src/app/Modules/brandManager/brand-manager.module.ts","webpack:///./src/app/Modules/brandManager/brand-manager.service.ts","webpack:///./src/app/interface/manager_details.ts"],"names":[],"mappings":"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","file":"Modules-brandManager-brand-manager-module.js","sourcesContent":["module.exports = \"<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header card-header-primary\\\">\\r\\n        <div class=\\\"d-flex justify-content-between\\\">\\r\\n            <h4 class=\\\"card-title \\\">Brand Manager</h4>\\r\\n            <div class=\\\"dropdown\\\">\\r\\n                <a class=\\\"nav-link \\\">\\r\\n                    <!-- <i class=\\\"material-icons\\\" (click)=\\\"managerForm.reset()\\\" data-toggle=\\\"modal\\\" data-target=\\\"#ManagerFormModal\\\"> add_to_photos</i> -->\\r\\n                    <button class=\\\"btn btn-primary transparent\\\" (click)=\\\"managerForm.reset()\\\" data-toggle=\\\"modal\\\"\\r\\n                        data-target=\\\"#ManagerFormModal\\\"><i class=\\\"material-icons\\\" style=\\\"font-size: 30px;\\\">\\r\\n                            person_add\\r\\n                        </i></button>\\r\\n                </a>\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n\\r\\n        <div class=\\\"table-responsive\\\" id=\\\"coll\\\">\\r\\n            <table class=\\\"table table-hover \\\">\\r\\n\\r\\n                <thead class=\\\" text-primary\\\">\\r\\n\\r\\n                    <th *ngFor=\\\"let head of headerRow\\\">{{ head }}</th>\\r\\n\\r\\n                </thead>\\r\\n                <tbody *ngFor=\\\"let row of dataRows let i =index\\\">\\r\\n\\r\\n\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <b> {{i+1}} </b>\\r\\n                        </td>\\r\\n\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"row.picUrl\\\" style=\\\"width: 45px;height: 45px;border-radius: 25px;\\\" src=\\\"{{row.picUrl}}\\\">\\r\\n                            &nbsp;\\r\\n                            <i *ngIf=\\\"!row.picUrl\\\" style=\\\"width: 45px;height: 45px;border-radius: 25px;\\\" class=\\\"material-icons mainColor\\\">person</i>\\r\\n\\r\\n                            {{row.name}}\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <b>{{row.username}}</b>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <b>{{row.email}}</b>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <b>{{row.contactNo}}</b>\\r\\n                        </td>\\r\\n                        <td class=\\\"change-icon\\\">\\r\\n\\r\\n                            <i (click)=\\\"getId(row.id)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#deleteModal\\\" class=\\\"material-icons mainColor deleteIcon\\\">delete</i>\\r\\n\\r\\n                            <i (click)=\\\"getId(row.id)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#deleteModal\\\" class=\\\"material-icons mainColor deleteChange-icon\\\">delete_forever</i>\\r\\n\\r\\n                        </td>\\r\\n\\r\\n\\r\\n\\r\\n                    </tr>\\r\\n\\r\\n\\r\\n\\r\\n                </tbody>\\r\\n                <tfoot>\\r\\n                    <tr>\\r\\n                        <td colspan=\\\"9\\\" style=\\\"font-size: 70px; text-align: center;\\\">\\r\\n                            <i *ngIf=\\\"isDataLoad\\\" class=\\\"fa fa-spinner fa-spin mainColor\\\"></i>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tfoot>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- barand manager form -->\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"ManagerFormModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"ManagerFormModal\\\"\\r\\n    aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content   card card-stats\\\">\\r\\n            <div class=\\\"card-header card-header-success card-header-icon\\\">\\r\\n                <div class=\\\"card-icon\\\">\\r\\n                    <i class=\\\"material-icons\\\">person_add\\r\\n                    </i>\\r\\n                </div>\\r\\n                <h3 class=\\\"card-title\\\">ADD MANAGER</h3>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <form (ngSubmit)=\\\"onSubmit()\\\" #managerForm=\\\"ngForm\\\">\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"name\\\"> Name <span style=\\\"color: red;\\\">*</span></label>\\r\\n                                <br>\\r\\n                                <input type=\\\"text\\\" required class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"managerDetails.name\\\"\\r\\n                                    #name=\\\"ngModel\\\">\\r\\n                                <small [hidden]=\\\"name.valid || name.untouched\\\" style=\\\"color: red\\\">\\r\\n                                    Name is required\\r\\n                                </small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <label>Profile Picture</label>\\r\\n                            <input type=\\\"file\\\" (change)=\\\"onSelectFile($event)\\\" name=\\\"pic\\\" id=\\\"pic\\\" class=\\\"form-control \\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Email Id <span style=\\\"color: red;\\\">*</span> </label>\\r\\n                                <input type=\\\"email\\\" required [(ngModel)]=\\\"managerDetails.email\\\" name=\\\"email\\\" id=\\\"email\\\"\\r\\n                                    class=\\\"form-control \\\" #email=\\\"ngModel\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}\\\">\\r\\n                                <small [hidden]=\\\"email.valid || email.untouched\\\" style=\\\"color: red\\\">\\r\\n                                    Email Id is required\\r\\n                                </small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"userName\\\">User Name <span style=\\\"color: red;\\\">*</span></label>\\r\\n                                <br>\\r\\n                                <input type=\\\"text\\\" required minlength=\\\"4\\\" maxlength=\\\"20\\\" class=\\\"form-control\\\" id=\\\"userName\\\"\\r\\n                                    name=\\\"userName\\\" [(ngModel)]=\\\"managerDetails.username\\\" #userName=\\\"ngModel\\\">\\r\\n                                <small [hidden]=\\\"userName.valid || userName.untouched\\\" style=\\\"color: red\\\">\\r\\n                                    User Name is required at\\r\\n                                </small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"password\\\">Password <span style=\\\"color: red;\\\">*</span></label>\\r\\n                                <br>\\r\\n                                <input type=\\\"password\\\" required class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\"\\r\\n                                    [(ngModel)]=\\\"managerDetails.password\\\" #password=\\\"ngModel\\\">\\r\\n                                <small [hidden]=\\\"password.valid || password.untouched\\\" style=\\\"color: red\\\">\\r\\n                                    password is required with minimum length 6\\r\\n                                </small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"contactNo\\\">Contact No <span style=\\\"color: red;\\\">*</span></label>\\r\\n\\r\\n                                <input type=\\\"number\\\" required minlength=\\\"10\\\" maxlength=\\\"13\\\" class=\\\"form-control\\\" id=\\\"contactNo\\\"\\r\\n                                    name=\\\"contactNo\\\" [(ngModel)]=\\\"managerDetails.contactNo\\\" #contactNo=\\\"ngModel\\\">\\r\\n                                <small [hidden]=\\\"contactNo.valid || contactNo.untouched\\\" style=\\\"color: red\\\">\\r\\n                                    Contect No. is required\\r\\n                                </small>\\r\\n\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"exampleFormControlSelect1\\\">Brand Id</label>\\r\\n                                <select class=\\\"form-control  selectpicker\\\" name=\\\"brnad\\\" [(ngModel)]=\\\"managerDetails.brandId\\\"\\r\\n                                    #brand=\\\"ngModel\\\" id=\\\"exampleFormControlSelect1\\\">\\r\\n                                    <option *ngFor=\\\"let brand of brands\\\" [value]=\\\"brand.id\\\"> {{brand.name}} </option>\\r\\n\\r\\n                                </select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"modal-footer\\\">\\r\\n\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!managerForm.valid\\\" class=\\\"btn btn-success\\\">Submit</button>\\r\\n                    </div>\\r\\n                </form>\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- brand manager form end -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- delete modal for brand manager -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"deleteModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"deleteModal\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content   card card-stats\\\">\\r\\n            <div class=\\\"card-header card-header-success card-header-icon\\\">\\r\\n                <div class=\\\"card-icon\\\">\\r\\n                    <i class=\\\"material-icons\\\">delete_outline\\r\\n                    </i>\\r\\n                </div>\\r\\n                <h3 class=\\\"card-title\\\">Delete</h3>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <h3>\\\"Are you sure you want to delete this Manager?\\\",\\r\\n                </h3>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cancle</button>\\r\\n                    <button type=\\\"submit\\\" (click)=\\\"deleteManager()\\\" class=\\\"btn btn-success\\\">Delete</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- delete modal end here -->\"","module.exports = \".search-results {\\n  height: auto;\\n  overflow: scroll; }\\n\\n.loadingPage {\\n  font-size: 100px;\\n  padding-top: 150px;\\n  color: #851aa1;\\n  text-align: center; }\\n\\n.action-buttons i {\\n  position: relative;\\n  z-index: 2; }\\n\\n.action-buttons i:before {\\n    position: absolute;\\n    content: '';\\n    -webkit-transform-origin: center;\\n            transform-origin: center;\\n    width: 0px;\\n    height: 0px;\\n    left: 50%;\\n    top: 50%;\\n    -webkit-transform: translate(-50%, -50%);\\n            transform: translate(-50%, -50%);\\n    border-radius: 50%;\\n    background: rgba(0, 0, 0, 0.1);\\n    transition: 0.1s; }\\n\\n.action-buttons i:hover {\\n    color: #de2768;\\n    cursor: pointer; }\\n\\n.action-buttons i:hover:before {\\n      width: 35px;\\n      height: 35px;\\n      z-index: 1; }\\n\\n.new {\\n  background: #f1c40f; }\\n\\n.not-fixed {\\n  background: #f44336; }\\n\\n.fixed {\\n  background: #4caf50; }\\n\\n.scheduled {\\n  background: #03a9f4; }\\n\\n.assigned {\\n  background: #3f51b5; }\\n\\n.rotate {\\n  -webkit-transform: rotate(180deg);\\n          transform: rotate(180deg);\\n  transition: 0.5s ease-in-out; }\\n\\n.re-open {\\n  background: #9c27b0; }\\n\\ntr:hover {\\n  cursor: pointer; }\\n\\ntr:hover .collapse-icon {\\n    color: #de2768; }\\n\\n.incident-details .product-image {\\n  width: inherit; }\\n\\n.incident-details .btn {\\n  background: white; }\\n\\n.assign-form .material-icons {\\n  color: #4caf50; }\\n\\n.incident-detail-box {\\n  transition: 0.2s ease-in box-shadow; }\\n\\n.incident-detail-box:hover {\\n    background: white;\\n    box-shadow: 0 10px 10px rgba(0, 0, 0, 0.1); }\\n\\n.selectpicker {\\n  -webkit-appearance: menulist !important;\\n  height: auto !important; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BrandManagerService } from './brand-manager.service';\r\nimport { ManagerDetails } from '../../interface/manager_details';\r\nimport { TostService } from 'src/app/providers/tost.service';\r\n\r\ndeclare const $: any;\r\n@Component({\r\n  selector: 'app-brand-manager',\r\n  templateUrl: './brand-manager.component.html',\r\n  styleUrls: ['./brand-manager.component.scss']\r\n})\r\nexport class BrandManagerComponent implements OnInit {\r\n\r\n  isDataLoad: boolean = true;\r\n  loadingButton: boolean = false;\r\n  isBrandId: boolean = false;\r\n  submitButtonHide: boolean = false;\r\n\r\n  headerRow = ['S.No.', 'Name', 'User Name', 'Email', 'Phone No', \"Action\"]\r\n\r\n  imgfile: any;\r\n  urlTOShowImg: any;\r\n  dataRows: any;\r\n  brands: any;\r\n\r\n  currentId: number;\r\n\r\n  managerDetails = new ManagerDetails;\r\n\r\n  constructor(\r\n    private brandService: BrandManagerService,\r\n    private tostservice: TostService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.getManagers();\r\n    this.getBrandIds();\r\n  }\r\n\r\n\r\n  getManagers() {\r\n    this.brandService.getManager()\r\n      .subscribe((res: any) => {\r\n        this.dataRows = res;\r\n        this.isDataLoad = false;\r\n      },\r\n        (err) => {\r\n          this.tostservice.showNotificationFailure(err)\r\n        })\r\n  }\r\n\r\n\r\n  getBrandIds() {\r\n    this.brandService.getBrandIds()\r\n      .subscribe((res: any) => {\r\n        this.brands = res;\r\n        this.isBrandId = false;\r\n      },\r\n        (err) => {\r\n          this.tostservice.showNotificationFailure(err)\r\n        })\r\n  }\r\n\r\n\r\n  // upload manager img \r\n  onSelectFile(event) { // called each time file input changes\r\n    if (event.target.files && event.target.files[0]) {\r\n      var reader = new FileReader();\r\n      this.imgfile = event.target.files[0];\r\n      reader.readAsDataURL(event.target.files[0]); // read file as data url\r\n\r\n      reader.onload = (event: any) => { // called once readAsDataURL is completed\r\n        this.urlTOShowImg = event.target.result;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // creat new manager\r\n  onSubmit() {\r\n    this.submitButtonHide = true;\r\n\r\n    this.loadingButton = true;\r\n    const fd = new FormData();\r\n\r\n    for (const key in this.managerDetails) {\r\n      fd.append(key, this.managerDetails[key]);\r\n      if (this.imgfile) {\r\n        fd.append(\"pic\", this.imgfile)\r\n      }\r\n    }\r\n\r\n    this.brandService.addManager(fd)\r\n      .subscribe((res: any) => {\r\n        this.resetform();\r\n        this.closeManagerFormModal();\r\n        this.dataRows.unshift(res)\r\n        this.tostservice.showNotificationSuccess(\"Manager add successfuly\");\r\n      }, (err) => {\r\n        this.loadingButton = false;\r\n\r\n        this.tostservice.showNotificationFailure(err)\r\n      })\r\n\r\n\r\n  }\r\n\r\n\r\n  getId(id) {\r\n    this.currentId = id;\r\n  }\r\n\r\n\r\n  // delete manager \r\n  deleteManager() {\r\n    this.brandService.deleteManager(this.currentId)\r\n      .subscribe((res: any) => {\r\n        this.tostservice.showNotificationSuccess(\"Manager Delete successfuly\");\r\n      }, (err) => {\r\n        this.tostservice.showNotificationFailure(err)\r\n      })\r\n  }\r\n\r\n\r\n  // reset manager form\r\n  resetform() {\r\n    this.imgfile = null;\r\n    this.managerDetails = new ManagerDetails();\r\n  }\r\n\r\n\r\n  closeManagerFormModal() {\r\n    $('#ManagerFormModal').modal('hide')\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrandManagerComponent } from './brand-manager.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    RouterModule.forChild([\n\n      { path: '', component: BrandManagerComponent },\n\n\n    ])\n  ],\n  declarations: [\n    BrandManagerComponent,\n  ]\n})\nexport class BrandManagerModule { }\n","import { Injectable } from '@angular/core';\nimport { CustomHttpService } from '../../providers/custom-http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrandManagerService {\n\n  constructor(private customHttp: CustomHttpService) { }\n\n\n  //add manager\n  addManager(fd) {\n    return this.customHttp.post(\"/sa/employee\", fd)\n  }\n\n  //get brand id\n  getBrandIds() {\n\n    return this.customHttp.get(\"/sa/brand\")\n  }\n\n  //get manager details\n  getManager() {\n    return this.customHttp.get(\"/sa/brand-manager/page/1\")\n  }\n\n\n\n\n  // delete Manager\n\n  deleteManager(delete_id) {\n    return this.customHttp.delete(`/sa/employee/${delete_id}`)\n  }\n}\n","export class ManagerDetails {\r\n    name:string;\r\n    nickName?:string;\r\n    username: string;\r\n    password: string;\r\n    contactNo:number;\r\n    brandId:number;\r\n    userType=\"BrandManager\";\r\n    email:string;\r\n    pic:any;\r\n\r\n    }\r\n\r\n    export class EditManagerDetails {\r\n        name:string;  \r\n        password: string;\r\n        contactNo:number;\r\n          email:string;\r\n    pic:any;\r\n    }"],"sourceRoot":""}