{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.scss","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/login/login.service.ts","webpack:///./src/app/interface/user.ts","webpack:///./src/app/providers/app.constants.ts","webpack:///./src/app/providers/custom-http.service.ts","webpack:///./src/app/providers/tost.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"../../Modules/brandManager/brand-manager.module\": [\n\t\t\"./src/app/Modules/brandManager/brand-manager.module.ts\",\n\t\t\"Modules-brandManager-brand-manager-module\"\n\t],\n\t\"../../Modules/incidents/incidents.module\": [\n\t\t\"./src/app/Modules/incidents/incidents.module.ts\",\n\t\t\"Modules-incidents-incidents-module~Modules-installation-installation-module\",\n\t\t\"common\",\n\t\t\"Modules-incidents-incidents-module\"\n\t],\n\t\"../../Modules/installation/installation.module\": [\n\t\t\"./src/app/Modules/installation/installation.module.ts\",\n\t\t\"Modules-incidents-incidents-module~Modules-installation-installation-module\",\n\t\t\"common\",\n\t\t\"Modules-installation-installation-module\"\n\t],\n\t\"../../Modules/serviceEngineer/service-engineer.module\": [\n\t\t\"./src/app/Modules/serviceEngineer/service-engineer.module.ts\",\n\t\t\"common\",\n\t\t\"Modules-serviceEngineer-service-engineer-module\"\n\t],\n\t\"./layouts/admin-layout/admin-layout.module\": [\n\t\t\"./src/app/layouts/admin-layout/admin-layout.module.ts\",\n\t\t\"common\",\n\t\t\"layouts-admin-layout-admin-layout-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"\"","module.exports = \"<!-- <div class=\\\"wrapper\\\">\\n  <app-sidebar ></app-sidebar>\\n  <div class=\\\"main-panel\\\">\\n    <app-navbar ></app-navbar>\\n    <div class=\\\"content\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n    <app-footer></app-footer>\\n  </div>\\n\\n</div> -->\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'iServe';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ErrorHandler } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { CustomHttpService } from './providers/custom-http.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { LoginComponent } from './components/login/login.component';\nimport { LoginService } from './components/login/login.service';\nimport { TostService, } from './providers/tost.service';\n\n\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  {\n    path: '', loadChildren: './layouts/admin-layout/admin-layout.module#AdminLayoutModule',\n  },\n  \n  ];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n   \n   \n    LoginComponent,\n   \n   \n   \n   \n    \n    \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes)\n  ],\n\n  providers: [\n    TostService,\n    LoginService, CustomHttpService ,\n  \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"wrapper wrapper-full-page\\\">\\r\\n    <div class=\\\"page-header login-page header-filter bg-image\\\" filter-color=\\\"black\\\">\\r\\n        <div class=\\\"bg-color\\\">\\r\\n            <div class=\\\"container\\\">\\r\\n                <div class=\\\"navbar-wrapper\\\" class=\\\"lightColor\\\">\\r\\n                    <h3>iServe</h3>\\r\\n                </div>\\r\\n                <!-- login form start here -->\\r\\n                <div *ngIf=\\\"login\\\" class=\\\"col-lg-4 col-md-6 col-sm-6 ml-auto mr-auto animated bounceInDown\\\">\\r\\n                    <form (ngSubmit)=\\\"onSubmit()\\\" #loginForm=\\\"ngForm\\\" class=\\\"form\\\">\\r\\n                        <div class=\\\"card card-login \\\">\\r\\n                            <div class=\\\"card-header card-header-rose text-center\\\">\\r\\n                                <h4 class=\\\"card-title\\\">Login</h4>\\r\\n                            </div>\\r\\n                            <div class=\\\"card-body \\\">\\r\\n                                <span class=\\\"bmd-form-group\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <div class=\\\"input-group-prepend\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"material-icons\\\">face</i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <input type=\\\"text\\\" required class=\\\"form-control\\\" id=\\\"userName\\\" name=\\\"userName\\\"\\r\\n                                            [(ngModel)]=\\\"user.name\\\" #userName=\\\"ngModel\\\">\\r\\n                                    </div>\\r\\n                                </span>\\r\\n                                <span class=\\\"bmd-form-group\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <div class=\\\"input-group-prepend\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"material-icons\\\">lock_outline</i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"user.password\\\"\\r\\n                                            id=\\\"pwd\\\" name=\\\"password\\\" #password=\\\"ngModel\\\">\\r\\n                                        <span><i class=\\\"material-icons\\\" style=\\\"padding-top:18px;\\\">visibility</i></span>\\r\\n                                    </div>\\r\\n                                </span>\\r\\n                                <span class=\\\"bmd-form-group\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <div class=\\\"input-group-prepend\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"material-icons\\\">\\r\\n                                                    supervised_user_circle\\r\\n                                                </i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n\\r\\n\\r\\n                                        <select required class=\\\"form-control selectpicker\\\" data-style=\\\"btn btn-link\\\"\\r\\n                                            [(ngModel)]=\\\"user.userType\\\" name=\\\"userType\\\" #userType=\\\"ngModel\\\">\\r\\n                                            <option *ngFor=\\\"let type of userTypes\\\" [value]=\\\"type\\\"> {{type}} </option>\\r\\n\\r\\n                                        </select>\\r\\n\\r\\n                                    </div>\\r\\n                                </span>\\r\\n                            </div>\\r\\n                            <div class=\\\"card-footer justify-content-center\\\">\\r\\n                                <button *ngIf=\\\"!submitButton\\\" type=\\\"submit\\\" [disabled]=\\\"!loginForm.form.valid\\\" class=\\\"btn btn-rose btn-link btn-lg\\\">Login</button>\\r\\n                                <button *ngIf=\\\"submitButton\\\" type=\\\"button\\\" class=\\\"btn btn-rose btn-link btn-lg\\\">Submitting\\r\\n                                    <i class=\\\"fa fa-spinner fa-spin\\\" style=\\\"margin-left:8px;\\\"></i></button>\\r\\n                            </div>\\r\\n                            <span>\\r\\n                                <button style=\\\"float: right\\\" type=\\\"button\\\" class=\\\"btn btn-rose btn-link btn-sm\\\"><a\\r\\n                                        (click)=\\\"forgetPwdCick()\\\">Forget\\r\\n                                        Password</a></button>\\r\\n\\r\\n                            </span>\\r\\n\\r\\n                        </div>\\r\\n\\r\\n                    </form>\\r\\n\\r\\n                </div>\\r\\n                <!-- login form start here -->\\r\\n\\r\\n                <!-- forget pasword form start here -->\\r\\n\\r\\n                \\r\\n                <!-- enter user name form start here  -->\\r\\n                <div *ngIf=\\\"userFrom\\\" class=\\\"col-lg-4 col-md-6 col-sm-6 ml-auto mr-auto animated bounceInDown\\\">\\r\\n\\r\\n                    <form #userForm=\\\"ngForm\\\" class=\\\"form\\\">\\r\\n                        <div class=\\\"card card-login \\\">\\r\\n                            <div class=\\\"card-header card-header-rose text-center\\\">\\r\\n                                <h4 class=\\\"card-title\\\">Enter User Name</h4>\\r\\n                            </div>\\r\\n                            <div class=\\\"card-body \\\">\\r\\n                                <span class=\\\"bmd-form-group\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <div class=\\\"input-group-prepend\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"material-icons\\\">face</i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <input type=\\\"text\\\" required placeholder=\\\"User Name\\\" class=\\\"form-control\\\" id=\\\"forgetUserName\\\"\\r\\n                                            name=\\\"forgetUserName\\\" [(ngModel)]=\\\"forgetUserName\\\" #userName=\\\"ngModel\\\">\\r\\n\\r\\n\\r\\n                                    </div>\\r\\n                                </span>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"card-footer justify-content-center\\\">\\r\\n                                <button *ngIf=\\\"!userFormButton\\\" type=\\\"button\\\" [disabled]=\\\"!userForm.form.valid\\\" (click)=\\\"getOtpClick()\\\"\\r\\n                                    class=\\\"btn btn-rose btn-link btn-lg\\\">Get\\r\\n                                    Otp </button>\\r\\n\\r\\n                                <button *ngIf=\\\"userFormButton\\\" type=\\\"button\\\" class=\\\"btn btn-rose btn-link btn-md\\\">Submitting\\r\\n                                    <i class=\\\"fa fa-spinner fa-spin\\\" style=\\\"margin-left:8px;\\\"></i></button>\\r\\n                            </div>\\r\\n                            <span>\\r\\n                                <button style=\\\"float: right\\\" type=\\\"button\\\" class=\\\"btn btn-rose btn-link btn-sm\\\"><a href=\\\"/login\\\">Login\\r\\n                                        Page</a></button>\\r\\n\\r\\n                            </span>\\r\\n                        </div>\\r\\n\\r\\n                    </form>\\r\\n\\r\\n                </div>\\r\\n                <!-- enter user name form end  here  -->\\r\\n\\r\\n                <!-- enter otp form start here -->\\r\\n                <div *ngIf=\\\"otpForm\\\" class=\\\"col-lg-4 col-md-6 col-sm-6 ml-auto mr-auto animated bounceInDown\\\">\\r\\n\\r\\n                    <form #otpForm=\\\"ngForm\\\" class=\\\"form\\\">\\r\\n                        <div class=\\\"card card-login \\\">\\r\\n                            <div class=\\\"card-header card-header-rose text-center\\\">\\r\\n                                <h4 class=\\\"card-title\\\">Enter New Password</h4>\\r\\n                            </div>\\r\\n                            <div class=\\\"card-body \\\">\\r\\n                                <span class=\\\"bmd-form-group\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <div class=\\\"input-group-prepend\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"material-icons\\\">face</i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <input type=\\\"text\\\" required placeholder=\\\"User Name\\\" class=\\\"form-control\\\" id=\\\"forgetName\\\"\\r\\n                                            name=\\\"forgetName\\\" [(ngModel)]=\\\"forgetUserName\\\" #forgetName=\\\"ngModel\\\">\\r\\n\\r\\n\\r\\n                                    </div>\\r\\n                                </span>\\r\\n\\r\\n                                <span class=\\\"bmd-form-group\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <div class=\\\"input-group-prepend\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"material-icons\\\">lock_outline</i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Enter New Password\\\"\\r\\n                                            [(ngModel)]=\\\"forgetPassword\\\" id=\\\"Password\\\" name=\\\"Password\\\" #Password=\\\"ngModel\\\">\\r\\n                                        <span><i class=\\\"material-icons\\\" style=\\\"padding-top:18px;\\\">visibility</i></span>\\r\\n                                    </div>\\r\\n                                </span>\\r\\n                                <span class=\\\"bmd-form-group\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <div class=\\\"input-group-prepend\\\">\\r\\n                                            <span class=\\\"input-group-text\\\">\\r\\n                                                <i class=\\\"material-icons\\\">lock_outline</i>\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"O T P\\\" [(ngModel)]=\\\"otp\\\"\\r\\n                                            id=\\\"otp1\\\" name=\\\"otp1\\\" #otp1=\\\"ngModel\\\">\\r\\n                                    </div>\\r\\n                                </span>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"card-footer justify-content-center\\\">\\r\\n                                <button *ngIf=\\\"!otpFormButton\\\" type=\\\"button\\\" [disabled]=\\\"!otpForm.form.valid\\\" (click)=\\\"passwordChangeClick()\\\"\\r\\n                                    class=\\\"btn btn-rose btn-link btn-lg\\\">Change\\r\\n                                    Password </button>\\r\\n\\r\\n                                <button *ngIf=\\\"otpFormButton\\\" type=\\\"button\\\" class=\\\"btn btn-rose btn-link btn-md\\\">Submitting\\r\\n                                    <i class=\\\"fa fa-spinner fa-spin\\\" style=\\\"margin-left:8px;\\\"></i></button>\\r\\n                            </div>\\r\\n                            <span>\\r\\n                                <button style=\\\"float: right\\\" type=\\\"button\\\" class=\\\"btn btn-rose btn-link btn-sm\\\"><a href=\\\"/login\\\">Login\\r\\n                                        Page</a></button>\\r\\n\\r\\n                            </span>\\r\\n\\r\\n\\r\\n\\r\\n                        </div>\\r\\n\\r\\n                    </form>\\r\\n\\r\\n                </div>\\r\\n                <!-- enter otp form end here -->\\r\\n\\r\\n\\r\\n                <!-- forget pasword form start here -->\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<footer class=\\\"footer \\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <nav class=\\\"pull-left\\\">\\r\\n            <ul>\\r\\n                <li>\\r\\n                    <a href=\\\"https://www.nxtlifetechnologies.com\\\">\\r\\n                        NxtLife Technologies\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li>\\r\\n                    <a href=\\\"#\\\">\\r\\n                        About Us\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li>\\r\\n                    <a href=\\\"#\\\">\\r\\n                        Licenses\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </nav>\\r\\n        <div class=\\\"copyright pull-right\\\">\\r\\n            &copy; 2018, developed by\\r\\n            <a href=\\\"https://www.nxtlifetechnologies.com\\\" target=\\\"_blank\\\" class=\\\"secondaryColor\\\">NxtLife Technologies</a>\\r\\n            for a better experience.\\r\\n        </div>\\r\\n    </div>\\r\\n</footer>\"","module.exports = \".bg-image {\\n  background-image: url(\\\"/assets/img/cover.jpg\\\");\\n  height: 100vh;\\n  background-size: cover; }\\n\\n.bg-color {\\n  background: #080808b0;\\n  height: 100vh; }\\n\\n.container {\\n  padding-top: 20px;\\n  padding-bottom: 200px; }\\n\\nselect,\\nselect.form-control {\\n  -webkit-appearance: menulist !important; }\\n\\nfooter {\\n  color: white;\\n  position: absolute;\\n  bottom: 0;\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { TostService } from 'src/app/providers/tost.service';\n\nimport { LoginService } from './login.service';\nimport { Router } from '@angular/router';\nimport { User } from '../../interface/user';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n\n\n  userTypes = [\"management\", \"superadmin\"];\n  user = new User(\"Rajesh@123\", \"Abc@123\", \"\");\n\n  submitted = false;\n  forgetUserName: string;\n  forgetPassword: string;\n  otp: string;\n  submitButton: boolean = false;\n\n  login = true;\n  userFrom = false;\n  otpForm = false;\n\n  userFormButton = false;\n  otpFormButton = false;\n\n  constructor(private router: Router, private tostservice: TostService, private loginservice: LoginService, ) {\n    if (this.loginservice.isLoggedIn()) {\n\n      this.navigateTo();\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  // user click on forget password\n\n  forgetPwdCick() {\n\n    this.login = false;\n    this.userFrom = true;\n\n  }\n\n\n  // request for otp or otp will be  send on user register phn no \n\n  getOtpClick() {\n    this.userFormButton = true;\n    this.loginservice.getOtp(this.forgetUserName)\n      .subscribe((res: any) => {\n        this.userFrom = false;\n        this.userFormButton = false;\n\n        this.otpForm = true;\n\n        this.tostservice.showNotificationSuccess(\"Otp sent to register Phone No\")\n      }, (err) => {\n        this.tostservice.showNotificationFailure(err)\n        this.userFrom = true;\n        this.userFormButton = false;\n      })\n\n\n  }\n\n\n  //  otp enter by user and request for password change by this function\n  passwordChangeClick() {\n    this.otpFormButton = true;\n    this.loginservice.forgetPwdChange({ \"otp\": this.otp, \"username\": this.forgetUserName, \"password\": this.forgetPassword })\n      .subscribe((res: any) => {\n        this.otpForm = false;\n        this.otpFormButton = false;\n\n        this.login = true;\n\n        this.tostservice.showNotificationSuccess(\"Password Change Successfuly\")\n      }, (err) => {\n        this.otpFormButton = false;\n\n        this.otpForm = true;\n\n        this.tostservice.showNotificationFailure(err)\n      })\n  }\n\n\n  // user loging function\n\n  onSubmit() {\n    this.submitButton = true;\n    this.loginservice.login(this.user)\n      .subscribe((res: any) => {\n        localStorage.setItem(\"access_token\", res.access_token)\n        if (localStorage.getItem(\"currentUserName\") == \"management\") {\n          this.loginservice.getUserInfo()\n            .subscribe((res: any) => {\n              this.storeInfo(res);\n              this.tostservice.showNotificationSuccess(\"Login successfuly\")\n            },\n              (err) => {\n                this.tostservice.showNotificationFailure(err)\n              })\n\n        } else {\n          this.navigateTo();\n        }\n      }, (err) => {\n\n        this.tostservice.showNotificationFailure(err)\n        this.submitButton = false;\n\n      })\n  }\n\n\n  // navigate on the basis of user type\n\n  navigateTo() {\n\n    if (localStorage.getItem(\"currentUserName\") == \"management\") {\n      this.router.navigate(['/dashboard']);\n    } else if (localStorage.getItem(\"currentUserName\") == \"superadmin\") {\n      this.router.navigate(['/engineer']);\n    }\n    else {\n      this.router.navigate(['/login'])\n    }\n\n  }\n\n  // store user information at a time of login\n  storeInfo = (res) => {\n    const success = this.loginservice.storeUserInfo(res);\n    success.subscribe((msg) => {\n\n      this.navigateTo();\n    },\n      (err) => {\n        this.tostservice.showNotificationFailure(err)\n\n      })\n  }\n}","import { Injectable } from '@angular/core';\r\nimport { CustomHttpService } from '../../providers/custom-http.service';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { UserInfo } from '../../interface/user';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\n\r\n\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n\r\n  username:Subject<string> = new Subject();\r\n  useremail:Subject<string> = new Subject();\r\n  usercontactno:Subject<string> = new Subject();\r\n  userpicture:Subject<any> = new Subject();\r\n\r\n  constructor(private customHttp: CustomHttpService) { }\r\n\r\n\r\n\r\n  isLoggedIn = () => {\r\n    return localStorage.getItem('access_token') ? true : false;\r\n  }\r\n\r\n\r\n\r\n\r\n  login(data){\r\n\r\n    localStorage.setItem(\"currentUserName\",data.userType);\r\n    localStorage.setItem(\"name\",data.name);\r\n    let header = new HttpHeaders()\r\n          .set('x-account', data.userType);\r\n\r\n    const login_api = `/oauth/token?grant_type=password&username=${data.name}&password=${data.password}`;\r\n    return this.customHttp.post(login_api, {}, header )\r\n    \r\n   }\r\n\r\n\r\n     //get user info after login \r\n  getUserInfo(){\r\n    const userInfo_api = `/user-info`\r\n    return this.customHttp.get(userInfo_api)\r\n  }\r\n\r\n\r\n\r\n  //store user info in local storage\r\n  storeUserInfo = (userInfo: UserInfo): Observable<any> => {\r\n    return Observable.create((observer) => {\r\n      Object.keys(userInfo).forEach((key, index) => {\r\n       \r\n        localStorage.setItem(key, userInfo[key]);\r\n      });\r\n      observer.next('success');\r\n      observer.complete();\r\n    });\r\n  }\r\n\r\n\r\n//delete access token from local storage\r\n  logout(){\r\nreturn localStorage.clear()\r\n}\r\n\r\n\r\n//whenever manager change his name its reflect to its subscribers\r\nupdateUsername(updateName:string){\r\n        localStorage.setItem(\"name\", updateName);\r\n  this.username.next(updateName);\r\n}\r\n\r\n//whenever manager change his email id its reflect to its subscribers\r\n\r\nupdateUserEmail(updateEmail:string){\r\n  localStorage.setItem(\"email\", updateEmail);\r\nthis.useremail.next(updateEmail);\r\n}\r\n\r\n//whenever manager change his phone no its reflect to its subscribers\r\n\r\nupdateUserContactNo(updateContactNo:string){\r\n  localStorage.setItem(\"contactNo\", updateContactNo);\r\nthis.usercontactno.next(updateContactNo);\r\n}\r\n\r\n//whenever manager change his  picture its reflect to its subscribers\r\n\r\nupdateUserPicture(updatePicture:string){\r\n  localStorage.setItem(\"picUrl\", updatePicture);\r\nthis.userpicture.next(updatePicture);\r\n}\r\n\r\n\r\n\r\n// edit brand manager details\r\n\r\neditManagerdetails(fd){\r\n    return this.customHttp.put(`/m`,fd)\r\n  }\r\n  \r\n  // for change profile pic\r\n  changePicture(fd){\r\n    return this.customHttp.post(`/m/picture`,fd)\r\n  }\r\n  \r\n  \r\n  // for change password\r\n  changeManagerPassword(fd){\r\n  \r\n    return this.customHttp.put(`/m/password`,fd)\r\n  }\r\n  \r\n\r\n//  for get otp on register phn no.\r\n  getOtp(username){\r\n    return this.customHttp.get(`/generate-otp/${username}`)\r\n  }\r\n\r\n//  forget password click request form change by entering username \r\n  forgetPwdChange(fd){\r\n    return this.customHttp.put(`/forgot-password`,fd)\r\n  }\r\n\r\n}\r\n","export class User {\r\n    constructor(\r\n   public name:string,\r\n   public password:string,\r\n    public userType:string,\r\n    ){}\r\n\r\n}\r\nexport class Token {\r\n    access_token: string;\r\n  }\r\n  \r\n  export class UserInfo {\r\n    contactNo: string;\r\n    email: string;\r\n    picUrl: string;\r\n    id: number;\r\n    name: string;\r\n    nickName: string;\r\n    userType: string;\r\n    \r\n    roles:Array<any>;\r\n    username: string;\r\n  }\r\n\r\n\r\n  \r\n  export class AssingedEngineer {\r\n  \r\n    comment?:string;\r\n    updateInfo=\"assignedServiceEngineer\";\r\n    serviceEngineerId : string;\r\n  }\r\n\r\n  export class RejectComplaint{\r\n    pic :any;\r\n    comment:string;\r\n    updateInfo=\"reject\";\r\n  }\r\n\r\n export class RejectInstallation{\r\n    pic :any;\r\n    comment:string;\r\n    updateInfo=\"reject\";\r\n  }\r\n\r\n\r\n  export class DateRange{\r\n\r\n    startDate:Date;\r\n    endDate:Date;\r\n  }\r\n  ","export const BASEURL =\"http://suvidha.us-east-2.elasticbeanstalk.com\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { BASEURL } from './app.constants';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\n\n\n\n@Injectable()\nexport class CustomHttpService {\n    constructor(private httpClient: HttpClient) { }\n\n    private getAccessToken() {\n\n        let basicToken = \"nxtlifecustomersupport:suvidha\";\n\n        return localStorage.getItem('access_token') ? 'Bearer ' + localStorage.getItem('access_token') : 'Basic ' + btoa(basicToken);\n    }\n\n    private addHeaders(optionalHeaders?: HttpHeaders) {\n\n        let requestHeaders = new HttpHeaders()\n            .set('Authorization', this.getAccessToken()).set(\"isWeb\", \"true\");\n\n        if (optionalHeaders) {\n            for (const header of optionalHeaders.keys()) {\n                requestHeaders = requestHeaders.append(header, optionalHeaders.get(header));\n            }\n        }\n        return requestHeaders;\n    }\n\n\n    get(url: string, options?: HttpHeaders) {\n\n        const headers = this.addHeaders(options);\n\n        return this.httpClient.get(BASEURL + url, { headers: headers, observe: 'response' })\n            .map(this.extractData)\n            .catch(this.handleError);\n    }\n\n    post(url: string, body: any, options?: HttpHeaders) {\n\n        const headers = this.addHeaders(options);\n\n        return this.httpClient.post(BASEURL + url, body, { headers: headers, observe: 'response' })\n            .map(this.extractData)\n            .catch(this.handleError);\n    }\n\n    postForRegister(url: string, body: any) {\n        // no header is required for register \n        return this.httpClient.post(BASEURL + url, body, { observe: 'response' })\n            .map(this.extractData)\n            .catch(this.handleError);\n    }\n\n    put(url: string, body: any, options?: HttpHeaders) {\n\n        const headers = this.addHeaders(options);\n\n        return this.httpClient.put(BASEURL + url, body, { headers: headers, observe: 'response' })\n            .map(this.extractData)\n            .catch(this.handleError);\n    }\n\n    delete(url: string, options?: HttpHeaders) {\n\n        const headers = this.addHeaders(options);\n\n        return this.httpClient.delete(BASEURL + url,  { headers: headers, observe: 'response' })\n            .map(this.extractData)\n            .catch(this.handleError);\n    }\n\n    private extractData(res: HttpResponse<any>) {\n\n        // console.log('inside extract data', res);\n        return res.body || res.status;\n    }\n\n    private handleError(err: HttpErrorResponse) {\n        console.log('inside custom http', err);\n        let errorInfo: any = {};\n\n     \n        console.log(err instanceof Error);\n        \n        if (err instanceof Error || err.error instanceof ProgressEvent) {\n            /**A client-side or network error occurred. Handle it accordingly.*/\n            // console.log('An error occurred:', );'\n            errorInfo.status = err.status;\n            errorInfo.status == 0 ? errorInfo.msg = \"Can't connect to the Server please Try again later\" : errorInfo.msg = err.message || 'Some Error Occured';\n        }\n        else {\n            /**The backend returned an unsuccessful response code.*/\n            // console.log('Server occurred:', error);\n\n            errorInfo.status = err.status;\n            errorInfo.msg= err.error.message;\n\n\n\n\n\n        }\n        return Observable.throw(errorInfo);\n\n    }\n\n}\n","import { Injectable } from '@angular/core';\ndeclare const $: any;\n@Injectable({\n  providedIn: 'root'\n})\nexport class TostService {\n\n  constructor() { }\n\n\n  showNotificationSuccess(message?) {\n\n    $.notify({\n\n      icon: \"add_alert\",\n      message: message || \"Successfull\"\n\n\n\n    }, {\n        type: 'success',\n        timer: 1000,\n        placement: {\n          from: \"top\",\n          align: \"right\"\n        }\n      });\n  }\n\n\n\n\n\n  showNotificationFailure(err) {\n    $.notify({\n\n      icon: \"error_outline\",\n      message: err.status+ \" \" + err.msg,\n\n\n\n    }, {\n        type: 'danger',\n        timer: 5000,\n        placement: {\n          from: \"top\",\n          align: \"right\"\n        }\n      });\n  }\n\n\n\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}