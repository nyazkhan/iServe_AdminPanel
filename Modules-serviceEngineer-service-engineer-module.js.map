{"version":3,"sources":["webpack:///./src/app/Modules/serviceEngineer/service-engineer.component.html","webpack:///./src/app/Modules/serviceEngineer/service-engineer.component.scss","webpack:///./src/app/Modules/serviceEngineer/service-engineer.component.ts","webpack:///./src/app/Modules/serviceEngineer/service-engineer.module.ts","webpack:///./src/app/Modules/serviceEngineer/service-engineer.service.ts","webpack:///./src/app/interface/engineer_details.ts","webpack:///./src/app/providers/filter.pipe.ts","webpack:///./src/app/providers/length.pipe.ts","webpack:///./src/app/providers/pipe.module.ts"],"names":[],"mappings":"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","file":"Modules-serviceEngineer-service-engineer-module.js","sourcesContent":["module.exports = \"<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-header card-header-primary\\\">\\r\\n    <div class=\\\"d-flex justify-content-between\\\">\\r\\n      <h4 class=\\\"card-title \\\">Service Engineer</h4>\\r\\n\\r\\n      <div class=\\\"dropdown\\\">\\r\\n        <a class=\\\"nav-link \\\">\\r\\n          <button class=\\\"btn btn-primary transparent \\\" (click)=\\\"engineerForm.reset()\\\" data-toggle=\\\"modal\\\" data-target=\\\"#EngineerFormModal\\\"><i\\r\\n              class=\\\"material-icons\\\" style=\\\"font-size: 30px;\\\">\\r\\n              person_add\\r\\n            </i></button>\\r\\n        </a>\\r\\n      </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"table-responsive\\\" id=\\\"coll\\\">\\r\\n      <table class=\\\"table table-hover\\\">\\r\\n        <thead class=\\\" text-primary\\\">\\r\\n          <th *ngFor=\\\"let head of headerRow\\\">\\r\\n            {{head}}\\r\\n          </th>\\r\\n        </thead>\\r\\n        <tbody *ngFor=\\\"let row of dataRows let i =index\\\">\\r\\n          <tr>\\r\\n            <td data-toggle=\\\"collapse\\\" (click)=\\\"setId( row)\\\" attr.href=\\\"#collapseExample{{i}}\\\"><b>{{i+1}}</b></td>\\r\\n            <td data-toggle=\\\"collapse\\\" (click)=\\\"setId( row)\\\" attr.href=\\\"#collapseExample{{i}}\\\">{{row.name}}</td>\\r\\n            <td data-toggle=\\\"collapse\\\" (click)=\\\"setId( row)\\\" attr.href=\\\"#collapseExample{{i}}\\\">{{row.username}}</td>\\r\\n            <td data-toggle=\\\"collapse\\\" (click)=\\\"setId( row)\\\" attr.href=\\\"#collapseExample{{i}}\\\">{{row.email}}</td>\\r\\n            <td data-toggle=\\\"collapse\\\" (click)=\\\"setId( row)\\\" attr.href=\\\"#collapseExample{{i}}\\\">{{row.contactNo}}</td>\\r\\n            <td data-toggle=\\\"collapse\\\" (click)=\\\"setId( row)\\\" attr.href=\\\"#collapseExample{{i}}\\\">{{row.specialist}}</td>\\r\\n            <td class=\\\"change-icon\\\">\\r\\n              <i class=\\\"material-icons mainColor deleteIcon\\\">delete</i>\\r\\n              <i (click)=\\\"setId(row)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#deleteModal\\\" class=\\\"material-icons mainColor deleteChange-icon\\\">delete_forever</i>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr class=\\\"collapse\\\" data-parent=\\\"#coll\\\" attr.id=\\\"collapseExample{{i}}\\\">\\r\\n            <td colspan=7 class=\\\" incident-details\\\" style=\\\"background: whitesmoke;\\\">\\r\\n              <div class=\\\"row\\\" style=\\\"margin-top: 20px;\\\">\\r\\n\\r\\n                <div class=\\\"card card-nav-tabs margin-top\\\" style=\\\"width: 45%; margin-left: 50px; \\\">\\r\\n                  <div>\\r\\n                    <div class=\\\"card-header card-header-info float-right\\\" style=\\\"width:150px;\\\">\\r\\n                      Pincodes\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-12 col-sm-12 col-lg-12 col-xs-12\\\">\\r\\n                    <div style=\\\"margin-top: -19px;\\\">\\r\\n\\r\\n                      <form class=\\\"form-inline ml-auto\\\">\\r\\n                        <div class=\\\" no-border\\\">\\r\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\"  name=\\\"search\\\" [(ngModel)]=\\\"searchPin\\\" placeholder=\\\"search text goes here\\\">\\r\\n                        </div>\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-just-icon btn-round \\\" style=\\\"background: purple\\\">\\r\\n                          <i class=\\\"material-icons\\\">search</i>\\r\\n                        </button>\\r\\n                      </form>\\r\\n                    </div>\\r\\n                    <div class=\\\"space-between\\\">\\r\\n                      <div class=\\\"activePin\\\">Active</div>\\r\\n                      <div class=\\\"InactivePin\\\">Inactive</div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row scroll\\\" style=\\\"padding-top: 13px;\\\">\\r\\n                      <div class=\\\"col-md-6\\\">\\r\\n\\r\\n                        <ul *ngFor=\\\"let pin of assignpincode | filterSearch : searchPin\\\">\\r\\n\\r\\n                          <li class=\\\"badge badge-pill badge-primary\\\" style=\\\"position: relative;    width: 87px;\\\">\\r\\n                            {{pin}}\\r\\n                            <i *ngIf=\\\"editPinShow\\\" (click)=\\\"removePincode(pin)\\\" class=\\\"material-icons iconPosition\\\">\\r\\n                              remove_circle\\r\\n                            </i>\\r\\n                          </li>\\r\\n                        </ul>\\r\\n\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-6\\\" *ngIf=\\\"editPinShow\\\">\\r\\n                        <ul *ngFor=\\\"let pin of editpins | filterSearch : searchPin\\\">\\r\\n\\r\\n                          <li class=\\\"badge badge-pill badge-primary\\\" style=\\\"position: relative;    width: 87px;\\\">{{pin}}\\r\\n                            <i (click)=\\\"addPin(pin)\\\" class=\\\"material-icons iconPosition\\\">\\r\\n                              add_circle\\r\\n                            </i>\\r\\n                          </li>\\r\\n                        </ul>\\r\\n                      </div>\\r\\n\\r\\n                    </div>\\r\\n                    <div> <button *ngIf=\\\"!editPinShow\\\" (click)=\\\"showEditPin()\\\" class=\\\" btn btn-outline-info btn-sm  editBtn float-right\\\"\\r\\n                        type=\\\"button\\\">Edit</button></div>\\r\\n                    <div *ngIf=\\\"editPinShow\\\" class=\\\"modal-footer float-right\\\" style=\\\"padding: 0;border: 0;\\\">\\r\\n                      <div style=\\\"margin: auto;\\\">\\r\\n                        <button (click)=\\\"canclePinchanges(row)\\\" class=\\\"btn btn-outline-danger\\\" style=\\\"padding: 5px;margin-right: 12px;\\\">Cancle</button>\\r\\n                        <button *ngIf=\\\"!pinChangeSuccessfuly\\\" type=\\\"submit\\\" (click)=\\\"changePincode()\\\" class=\\\"btn btn-outline-success\\\"\\r\\n                          style=\\\"padding: 5px;\\\">Save\\r\\n                          Changes\\r\\n                        </button>\\r\\n                        <button *ngIf=\\\"pinChangeSuccessfuly \\\" type=\\\"button\\\" class=\\\"btn btn-outline-success\\\" style=\\\"padding: 5px;\\\">\\r\\n                          <i class=\\\"fa fa-spinner fa-spin\\\"></i>submitting\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"card card-nav-tabs margin-top\\\" style=\\\"width: 45%; margin-left: 20px; \\\">\\r\\n                  <div>\\r\\n                    <div class=\\\"card-header card-header-info float-right\\\" style=\\\"width:200px;\\\">\\r\\n                      Engineer Details\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col-md-12 col-sm-12 col-lg-12 col-xs-12\\\" style=\\\"padding:15px;\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-md-4 col-lg-4 col-sm-4 \\\">\\r\\n                        <img *ngIf=\\\"row.picUrl\\\" class=\\\"product-image\\\" src=\\\"{{row.picUrl}}\\\">\\r\\n                        <img *ngIf=\\\"!row.picUrl \\\" class=\\\"product-image\\\" src=\\\"/assets/img/user.png\\\">\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"col-md-6 col-lg-6 col-sm-6 col-xs-6\\\">\\r\\n                        <div *ngIf=\\\" row.name \\\">\\r\\n                          <i class=\\\"fa fa-user details-icon\\\" aria-hidden=\\\"true\\\"></i> <b>{{ row.name }}</b>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"row.contactNo\\\">\\r\\n                          <i class=\\\"fa fa-phone details-icon\\\" aria-hidden=\\\"true\\\"></i> {{ row.contactNo }}\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\" row.email \\\">\\r\\n                          <i class=\\\"fa fa-envelope details-icon\\\" aria-hidden=\\\"true\\\"></i> {{ row.email}}\\r\\n                        </div>\\r\\n                        <div>\\r\\n                          <i class=\\\"fa fa-home details-icon\\\" aria-hidden=\\\"true\\\" style=\\\"font-size: 18px;\\\"></i>\\r\\n                          {{row.city}} , {{row.state}} ,\\r\\n                          {{row.country}}, , {{row.postalCode}}\\r\\n                        </div>\\r\\n\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n\\r\\n\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <div class=\\\"card card-nav-tabs margin-top\\\" style=\\\"width: 95%; margin-left: 25px;\\\">\\r\\n                <div>\\r\\n                  <div class=\\\"card-header card-header-info float-right\\\" style=\\\"width:150px;\\\">\\r\\n                    Product Category\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12 col-sm-12 col-lg-12 col-xs-12\\\">\\r\\n                  <div class=\\\"space-between\\\">\\r\\n                    <button *ngIf=\\\"!removeCatShow\\\" (click)=\\\"editProductCategory('add')\\\" class=\\\" btn btn-primary btn-sm backgroundColor editBtn\\\"\\r\\n                      type=\\\"button\\\">Add</button>\\r\\n                    <button *ngIf=\\\"!addCatShow\\\" (click)=\\\"editProductCategory('remove')\\\" class=\\\" btn btn-primary btn-sm backgroundColor editBtn\\\"\\r\\n                      type=\\\"button\\\">Remove</button>\\r\\n                    <form class=\\\"form-inline ml-auto\\\">\\r\\n                      \\r\\n                      \\r\\n                      <div class=\\\" no-border\\\">\\r\\n\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\"  name=\\\"search\\\" [(ngModel)]=\\\"searchText\\\" placeholder=\\\"search text goes here\\\">\\r\\n                      </div>\\r\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-just-icon btn-round \\\" style=\\\"background: purple\\\">\\r\\n                        <i class=\\\"material-icons\\\">search</i>\\r\\n                      </button>\\r\\n                    </form>\\r\\n                  </div>\\r\\n                  <div class=\\\"space-between\\\">\\r\\n                    <div class=\\\"activePin\\\">Active</div>\\r\\n                    <div class=\\\"InactivePin\\\">Inactive</div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row \\\" style=\\\"padding-top: 13px;\\\">\\r\\n                    <div *ngIf=\\\"!addCatShow\\\" class=\\\"col-md-6 scroll\\\">\\r\\n\\r\\n                      <ul *ngFor=\\\"let type of assignedProductType | filterSearch : searchText\\\">\\r\\n\\r\\n                        <li class=\\\"badge badge-pill badge-primary\\\" style=\\\"position: relative;  height: 21px;  width: 200px;\\\">\\r\\n                          <p> {{type.name }}\\r\\n                          </p>\\r\\n                          <i *ngIf=\\\"removeCatShow\\\" (click)=\\\"removeCategory(type)\\\" class=\\\"material-icons iconPosition\\\">\\r\\n                            remove_circle\\r\\n                          </i>\\r\\n                        </li>\\r\\n                      </ul>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                       <!-- <ul>\\r\\n                        <li *ngFor=\\\"let c of typeName | filterSearch : searchText\\\">\\r\\n                          {{c}}\\r\\n                        </li>\\r\\n                      </ul>  -->\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div *ngIf=\\\"addCatShow\\\" class=\\\"col-md-12\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label> Select Product Categories <span style=\\\"color: red;\\\">*</span>\\r\\n                            </label>\\r\\n                            <select class=\\\"form-control selectHieght\\\" id=\\\"changeProSubCat\\\" required multiple\\r\\n                              [(ngModel)]=\\\"selectedProductCategories\\\" name=\\\"changeProSubCat\\\" #changeProSubCat=\\\"ngModel\\\"\\r\\n                              (ngModelChange)=\\\"onProductTypeIdChange()\\\">\\r\\n                              <option *ngFor=\\\"let product of productCategory\\\" [ngValue]=\\\"product\\\">{{product.name}}</option>\\r\\n                            </select>\\r\\n                            <small [hidden]=\\\"changeProSubCat.valid || changeProSubCat.untouched\\\" style=\\\"color: red\\\">\\r\\n                              Product Type options is required\\r\\n                            </small>\\r\\n\\r\\n                          </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"selectedProductCategoryChildren?.length > 0\\\" class=\\\"col-md-4\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label> Select Product Sub-Categories <span style=\\\"color: red;\\\">*</span>\\r\\n                            </label>\\r\\n                            <button *ngIf=\\\"pinIstrue\\\" type=\\\"button\\\" class=\\\"buttonload\\\">\\r\\n                              <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\r\\n                            </button>\\r\\n                            <select class=\\\"form-control selectHieght\\\" id=\\\"changeProdType\\\" required multiple [(ngModel)]=\\\"ProductCategoryTypeIds\\\"\\r\\n                              name=\\\"changeProdType\\\" #changeProdType=\\\"ngModel\\\">\\r\\n                              <option *ngFor=\\\"let product of selectedProductCategoryChildren\\\" [value]=\\\"product.id\\\">{{product.name}}</option>\\r\\n                            </select>\\r\\n                            <small [hidden]=\\\"changeProdType.valid || changeProdType.untouched\\\" style=\\\"color: red\\\">\\r\\n                              Product Type options is required\\r\\n                            </small>\\r\\n                            <button (click)=\\\"getProdutId()\\\"> click</button>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"productType?.length > 0\\\" class=\\\"col-md-4\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label> Select Product Type Ids <span style=\\\"color: red;\\\">*</span>\\r\\n                            </label>\\r\\n\\r\\n                            <select class=\\\"form-control selectHieght\\\" id=\\\"changeProdTypeId\\\" required multiple\\r\\n                              [(ngModel)]=\\\"addCategoryTypeId\\\" name=\\\"changeProdTypeId\\\" #changeProdTypeId=\\\"ngModel\\\">\\r\\n                              <option *ngFor=\\\"let product of productType\\\" [value]=\\\"product.id\\\">{{product.name}}</option>\\r\\n                            </select>\\r\\n                            <small [hidden]=\\\"changeProdTypeId.valid || changeProdTypeId.untouched\\\" style=\\\"color: red\\\">\\r\\n                              Product Type options is required\\r\\n                            </small>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"removeCatShow || addCatShow\\\" class=\\\"modal-footer\\\">\\r\\n                    <div style=\\\"margin: auto;\\\">\\r\\n                      <button (click)=\\\"cancleChange(row)\\\" class=\\\"btn btn-outline-danger\\\" style=\\\"padding: 5px;margin-right: 12px;\\\">Cancle</button>\\r\\n                      <button *ngIf=\\\"!categoryChangeSuccessfuly\\\" type=\\\"submit\\\" (click)=\\\"changeCategory()\\\" class=\\\"btn btn-outline-success\\\"\\r\\n                        style=\\\"padding: 5px;\\\">Save\\r\\n                        Changes\\r\\n                      </button>\\r\\n                      <button *ngIf=\\\"categoryChangeSuccessfuly \\\" type=\\\"button\\\" class=\\\"btn btn-outline-success\\\" style=\\\"padding: 5px;\\\">\\r\\n                        <i class=\\\"fa fa-spinner fa-spin\\\"></i>submitting\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n        <tfoot>\\r\\n          <tr>\\r\\n            <td colspan=\\\"9\\\" style=\\\"font-size: 70px; text-align: center;\\\">\\r\\n              <i *ngIf=\\\"isDataLoad\\\" class=\\\"fa fa-spinner fa-spin mainColor\\\"></i>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tfoot>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Service engineer form -->\\r\\n\\r\\n<div class=\\\"modal fade bd-example-modal-lg\\\" id=\\\"EngineerFormModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"EngineerFormModal\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content   card \\\">\\r\\n      <div class=\\\"card-header card-header-success card-header-icon\\\">\\r\\n        <div class=\\\"card-icon\\\">\\r\\n          <i class=\\\"material-icons\\\"> person_add\\r\\n          </i>\\r\\n        </div>\\r\\n        <h3 class=\\\"card-title\\\">ADD SERVICE ENGINEER</h3>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <form #engineerForm=\\\"ngForm\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"bmd-label-floating\\\" for=\\\"name\\\"> Name <span style=\\\"color: red;\\\">*</span>\\r\\n\\r\\n                </label>\\r\\n                <input type=\\\"text\\\" required minlength=\\\"4\\\" class=\\\"form-control \\\" [(ngModel)]=\\\"engineerDetails.name\\\" name=\\\"name\\\"\\r\\n                  id=\\\"name\\\" #name=\\\"ngModel\\\">\\r\\n                <small [hidden]=\\\"name.valid || name.untouched\\\" style=\\\"color: red\\\">\\r\\n                  Name is required\\r\\n                </small>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Username <span style=\\\"color: red;\\\">*</span>\\r\\n                </label>\\r\\n                <input type=\\\"text\\\" minlength=\\\"4\\\" maxlength=\\\"20\\\" required [(ngModel)]=\\\"engineerDetails.username\\\" name=\\\"username\\\"\\r\\n                  id=\\\"username\\\" class=\\\"form-control \\\" #username=\\\"ngModel\\\">\\r\\n\\r\\n                <small [hidden]=\\\"username.valid || username.untouched\\\" style=\\\"color: red\\\">\\r\\n                  Username should consist of minimum 6 characters\\r\\n                </small>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Contact No <span style=\\\"color: red;\\\">*</span>\\r\\n                </label>\\r\\n                <input type=\\\"number\\\" pl required pattern=\\\".{10,11}\\\" class=\\\"form-control \\\" [(ngModel)]=\\\"engineerDetails.contactNo\\\"\\r\\n                  name=\\\"contactNo\\\" id=\\\"contactNo\\\" #contactNo=\\\"ngModel\\\">\\r\\n                <small [hidden]=\\\"contactNo.valid || contactNo.untouched\\\" style=\\\"color: red\\\">\\r\\n                  Contact No is required\\r\\n                </small>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Email Id<span style=\\\"color: red;\\\">*</span>\\r\\n                </label>\\r\\n                <input type=\\\"email\\\" required [(ngModel)]=\\\"engineerDetails.email\\\" name=\\\"email\\\" id=\\\"email\\\" class=\\\"form-control \\\"\\r\\n                  #email=\\\"ngModel\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}\\\">\\r\\n\\r\\n                <small [hidden]=\\\"email.valid || email.untouched\\\" style=\\\"color: red\\\">\\r\\n                  Email Id is required\\r\\n                </small>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\" style=\\\"padding: 9px;\\\">\\r\\n              <label>Profile Picture\\r\\n              </label>\\r\\n              <input type=\\\"file\\\" (change)=\\\"onSelectFile($event)\\\" name=\\\"pic\\\" id=\\\"pic\\\" class=\\\"form-control \\\">\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Specialization<span style=\\\"color: red;\\\">*</span>\\r\\n                </label>\\r\\n                <input type=\\\"text\\\" required class=\\\"form-control  \\\" [(ngModel)]=\\\"engineerDetails.specialist\\\" name=\\\"specialist\\\"\\r\\n                  id=\\\"specialist\\\" #specialist=\\\"ngModel\\\">\\r\\n                <small [hidden]=\\\"specialist.valid || specialist.untouched\\\" style=\\\"color: red\\\">\\r\\n                  Specialization is required\\r\\n                </small>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Password <span style=\\\"color: red;\\\">*</span></label>\\r\\n                <input type=\\\"password\\\" required minlength=\\\"6\\\" class=\\\"form-control  \\\" [(ngModel)]=\\\"engineerDetails.password\\\"\\r\\n                  name=\\\"password\\\" id=\\\"password\\\" #password=\\\"ngModel\\\">\\r\\n                <small [hidden]=\\\"password.valid || password.untouched\\\" style=\\\"color: red\\\">\\r\\n                  Password should consist of minimum 6 characters\\r\\n                </small>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label> Select Pin Codes <span style=\\\"color: red;\\\">*</span>\\r\\n                </label>\\r\\n                <button *ngIf=\\\"pinIstrue\\\" type=\\\"button\\\" class=\\\"buttonload\\\">\\r\\n                  <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\r\\n                </button>\\r\\n                <select class=\\\"form-control selectHieght\\\" required multiple [(ngModel)]=\\\"engineerDetails.pincodes\\\" name=\\\"pincode\\\"\\r\\n                  #pincode=\\\"ngModel\\\">\\r\\n                  <option *ngFor=\\\"let pin of pins\\\" [value]=\\\"pin.pincode\\\">{{pin.pincode}}</option>\\r\\n                </select>\\r\\n                <small [hidden]=\\\"pincode.valid || pincode.untouched\\\" style=\\\"color: red\\\">\\r\\n                  Pincode is required\\r\\n                </small>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label> Select Product Categories <span style=\\\"color: red;\\\">*</span>\\r\\n                </label>\\r\\n                <button *ngIf=\\\"pinIstrue\\\" type=\\\"button\\\" class=\\\"buttonload\\\">\\r\\n                  <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\r\\n                </button>\\r\\n                <select class=\\\"form-control selectHieght\\\" id=\\\"proSubCat\\\" required multiple [(ngModel)]=\\\"selectedProductCategories\\\"\\r\\n                  name=\\\"proSubCat\\\" #proSubCat=\\\"ngModel\\\" (ngModelChange)=\\\"onProductTypeIdChange()\\\">\\r\\n                  <option *ngFor=\\\"let product of productCategory\\\" [ngValue]=\\\"product\\\">{{product.name}}</option>\\r\\n                </select>\\r\\n                <small [hidden]=\\\"proSubCat.valid || proSubCat.untouched\\\" style=\\\"color: red\\\">\\r\\n                  Product Type options is required\\r\\n                </small>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div *ngIf=\\\"selectedProductCategoryChildren?.length > 0\\\" class=\\\"col-md-4\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label> Select Product Sub-Categories <span style=\\\"color: red;\\\">*</span>\\r\\n                </label>\\r\\n                <button *ngIf=\\\"pinIstrue\\\" type=\\\"button\\\" class=\\\"buttonload\\\">\\r\\n                  <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\r\\n                </button>\\r\\n                <select class=\\\"form-control selectHieght\\\" id=\\\"prodTypeOptions\\\" required multiple [(ngModel)]=\\\"ProductCategoryTypeIds\\\"\\r\\n                  name=\\\"prodType\\\" #prodType=\\\"ngModel\\\">\\r\\n                  <option *ngFor=\\\"let product of selectedProductCategoryChildren\\\" [value]=\\\"product.id\\\">{{product.name}}</option>\\r\\n                </select>\\r\\n                <small [hidden]=\\\"prodType.valid || prodType.untouched\\\" style=\\\"color: red\\\">\\r\\n                  Product Type options is required\\r\\n                </small>\\r\\n                <div class=\\\"arrow bounce\\\">\\r\\n                  <button class=\\\"btn btn-primary btn-sm float-right \\\" (click)=\\\"getProdutId()\\\"><i class=\\\"material-icons\\\">\\r\\n                      arrow_forward\\r\\n                    </i></button>\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"productType?.length > 0\\\" class=\\\"col-md-4\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label> Select Product Type Ids <span style=\\\"color: red;\\\">*</span>\\r\\n                </label>\\r\\n\\r\\n                <select class=\\\"form-control selectHieght\\\" id=\\\"prodTypeId\\\" required multiple [(ngModel)]=\\\"engineerDetails.productTypeIds\\\"\\r\\n                  name=\\\"prodTypeId\\\" #prodTypeId=\\\"ngModel\\\">\\r\\n                  <option *ngFor=\\\"let product of productType\\\" [ngValue]=\\\"product.id\\\">{{product.name}}</option>\\r\\n                </select>\\r\\n                <small [hidden]=\\\"prodTypeId.valid || prodTypeId.untouched\\\" style=\\\"color: red\\\">\\r\\n                  Product Type options is required\\r\\n                </small>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-10\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Address Line <span style=\\\"color: red;\\\">*</span>\\r\\n                </label>\\r\\n                <input type=\\\"text\\\" required class=\\\"form-control \\\" [(ngModel)]=\\\"engineerDetails.address.address\\\" name=\\\"addres\\\"\\r\\n                  #addres=\\\"ngModel\\\">\\r\\n                <small [hidden]=\\\"addres.valid || addres.untouched\\\" style=\\\"color: red;\\\">\\r\\n                  Address Line is required\\r\\n                </small>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label> City <span style=\\\"color: red;\\\">*</span>\\r\\n                </label>\\r\\n                <input type=\\\"text\\\" required class=\\\"form-control \\\" [(ngModel)]=\\\"engineerDetails.address.city\\\" name=\\\"city\\\"\\r\\n                  id=\\\"city\\\" #city=\\\"ngModel\\\">\\r\\n                <small [hidden]=\\\"city.valid || city.untouched\\\" style=\\\"color: red\\\">\\r\\n                  City is required\\r\\n                </small>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label> State <span style=\\\"color: red;\\\">*</span>\\r\\n                </label>\\r\\n                <input type=\\\"text\\\" required class=\\\"form-control \\\" [(ngModel)]=\\\"engineerDetails.address.state\\\" name=\\\"state\\\"\\r\\n                  id=\\\"state\\\" #state=\\\"ngModel\\\">\\r\\n                <small [hidden]=\\\"state.valid || state.untouched\\\" style=\\\"color: red\\\">\\r\\n                  State Name is required\\r\\n                </small>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Country <span style=\\\"color: red;\\\">*</span>\\r\\n                </label>\\r\\n                <input type=\\\"text\\\" required class=\\\"form-control \\\" pl [(ngModel)]=\\\"engineerDetails.address.country\\\" name=\\\"country\\\"\\r\\n                  id=\\\"country\\\" #country=\\\"ngModel\\\">\\r\\n                <small [hidden]=\\\"country.valid || country.untouched\\\" style=\\\"color: red\\\">\\r\\n                  Country Name is required\\r\\n                </small>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Postel Code <span style=\\\"color: red;\\\">*</span>\\r\\n                </label>\\r\\n                <input type=\\\"text\\\" required class=\\\"form-control \\\" [(ngModel)]=\\\"engineerDetails.address.postalCode\\\" name=\\\"postalcode\\\"\\r\\n                  id=\\\"postalcode\\\" #postalcode=\\\"ngModel\\\">\\r\\n                <small [hidden]=\\\"postalcode.valid || postalcode.untouched\\\" style=\\\"color: red\\\">\\r\\n                  Postal code is required\\r\\n                </small>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Select Address Type <span style=\\\"color: red;\\\">*</span>\\r\\n                </label>\\r\\n                <select class=\\\"form-control\\\" required [(ngModel)]=\\\"engineerDetails.address.addressType\\\" name=\\\"addressType\\\"\\r\\n                  #addressType=\\\"ngModel\\\" style=\\\"height: px;\\\">\\r\\n                  <option *ngFor=\\\"let addr of addressTypeOptions\\\" [value]=\\\"addr\\\">{{addr}}</option>\\r\\n                </select>\\r\\n                <small [hidden]=\\\"addressType.valid || addressType.untouched\\\" style=\\\"color: red\\\">\\r\\n                  Address type is required\\r\\n                </small>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n          <button type=\\\"button\\\" *ngIf=\\\"!loadingButton\\\" (click)=\\\"creatEngineer()\\\" [disabled]=\\\"!engineerForm.valid\\\" class=\\\"btn btn-success\\\">Submit</button>\\r\\n          <button type=\\\"button\\\" *ngIf=\\\"loadingButton\\\" class=\\\"btn btn-success\\\">submitting</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Service Engineer form end -->\\r\\n\\r\\n\\r\\n<!-- delete service engineer model start here  -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"deleteModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"deleteModal\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content   card card-stats\\\">\\r\\n      <div class=\\\"card-header card-header-success card-header-icon\\\">\\r\\n        <div class=\\\"card-icon\\\">\\r\\n          <i class=\\\"material-icons\\\">delete_outline\\r\\n          </i>\\r\\n        </div>\\r\\n        <h3 class=\\\"card-title\\\">Delete</h3>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <h3>\\\"Are you sure you want to delete this Service Engineer?\\\",\\r\\n        </h3>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cancle</button>\\r\\n          <button type=\\\"submit\\\" (click)=\\\"deleteEngineer()\\\" class=\\\"btn btn-success\\\">Delete</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- delete service engineer model end here  -->\"","module.exports = \".search-results {\\n  height: auto;\\n  overflow: scroll; }\\n\\n.loadingPage {\\n  font-size: 100px;\\n  padding-top: 150px;\\n  color: #851aa1;\\n  text-align: center; }\\n\\n.action-buttons i {\\n  position: relative;\\n  z-index: 2; }\\n\\n.action-buttons i:before {\\n    position: absolute;\\n    content: '';\\n    -webkit-transform-origin: center;\\n            transform-origin: center;\\n    width: 0px;\\n    height: 0px;\\n    left: 50%;\\n    top: 50%;\\n    -webkit-transform: translate(-50%, -50%);\\n            transform: translate(-50%, -50%);\\n    border-radius: 50%;\\n    background: rgba(0, 0, 0, 0.1);\\n    transition: 0.1s; }\\n\\n.action-buttons i:hover {\\n    color: #de2768;\\n    cursor: pointer; }\\n\\n.action-buttons i:hover:before {\\n      width: 35px;\\n      height: 35px;\\n      z-index: 1; }\\n\\n.new {\\n  background: #f1c40f; }\\n\\n.not-fixed {\\n  background: #f44336; }\\n\\n.fixed {\\n  background: #4caf50; }\\n\\n.scheduled {\\n  background: #03a9f4; }\\n\\n.assigned {\\n  background: #3f51b5; }\\n\\n.rotate {\\n  -webkit-transform: rotate(180deg);\\n          transform: rotate(180deg);\\n  transition: 0.5s ease-in-out; }\\n\\n.re-open {\\n  background: #9c27b0; }\\n\\ntr:hover {\\n  cursor: pointer; }\\n\\ntr:hover .collapse-icon {\\n    color: #de2768; }\\n\\n.incident-details .product-image {\\n  width: inherit; }\\n\\n.incident-details .btn {\\n  background: white; }\\n\\n.assign-form .material-icons {\\n  color: #4caf50; }\\n\\n.incident-detail-box {\\n  transition: 0.2s ease-in box-shadow; }\\n\\n.incident-detail-box:hover {\\n    background: white;\\n    box-shadow: 0 10px 10px rgba(0, 0, 0, 0.1); }\\n\\n.incident-detail-box .alertred {\\n    color: red; }\\n\\n.selectHieght {\\n  height: 61px; }\\n\\nul#menu li {\\n  display: inline; }\\n\\n.assignPin {\\n  display: flex;\\n  position: relative; }\\n\\n.assignPin .editPin {\\n    margin-top: 0px;\\n    padding-top: 10px;\\n    padding-bottom: 10px; }\\n\\n.assignPin .removePin {\\n    left: 37px;\\n    position: absolute;\\n    top: -12px; }\\n\\n.margin-top {\\n  margin-top: 30px !important; }\\n\\n.iconPosition {\\n  color: #e8e8e8;\\n  position: absolute;\\n  top: -10px;\\n  background: gray;\\n  border-radius: 50%;\\n  border: 1px solid gray; }\\n\\n.editBtn {\\n  padding-top: 0;\\n  padding-left: 18px;\\n  padding-right: 18px;\\n  padding-bottom: 0;\\n  height: 25px;\\n  margin-top: 18px; }\\n\\n.activePin {\\n  font-weight: 500;\\n  color: gray;\\n  padding-left: 57px; }\\n\\n.InactivePin {\\n  font-weight: 500;\\n  color: gray;\\n  padding-right: 90px; }\\n\\n.product-image {\\n  width: 96px; }\\n\\n.bounce {\\n  -webkit-animation: bounce 2s infinite;\\n          animation: bounce 2s infinite; }\\n\\n@-webkit-keyframes bounce {\\n  0%, 20%, 50%, 80%, 100% {\\n    -webkit-transform: translateX(0);\\n            transform: translateX(0); }\\n  40% {\\n    -webkit-transform: translateX(-30px);\\n            transform: translateX(-30px); }\\n  60% {\\n    -webkit-transform: translateX(-15px);\\n            transform: translateX(-15px); } }\\n\\n@keyframes bounce {\\n  0%, 20%, 50%, 80%, 100% {\\n    -webkit-transform: translateX(0);\\n            transform: translateX(0); }\\n  40% {\\n    -webkit-transform: translateX(-30px);\\n            transform: translateX(-30px); }\\n  60% {\\n    -webkit-transform: translateX(-15px);\\n            transform: translateX(-15px); } }\\n\\n@media only screen and (max-width: 1125px) {\\n  .InactivePin {\\n    padding-right: 47px; } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceEngineerService } from './service-engineer.service';\r\nimport { EngineerDetails } from '../../interface/engineer_details';\r\nimport { TostService } from 'src/app/providers/tost.service';\r\n\r\ndeclare const $: any;\r\n@Component({\r\n  selector: 'app-service-engineer',\r\n  templateUrl: './service-engineer.component.html',\r\n  styleUrls: ['./service-engineer.component.scss']\r\n})\r\nexport class ServiceEngineerComponent implements OnInit {\r\n \r\n \r\n  editPinShow = false;\r\n  addCatShow = false;\r\n  removeCatShow = false;\r\n  pinChangeSuccessfuly = false;\r\n  pinIstrue = true;\r\n  loadingButton = false;\r\n  categoryChangeSuccessfuly = false;\r\n  isDataLoad = true;\r\n\r\n  productType = [];\r\n  assignpincode = [];\r\n  editpins = [];\r\n  assignedProductType = [];\r\n  assignedProductTypeId = [];\r\n  addCategoryTypeId = []\r\n\r\n  catarray: Array<number>;\r\n  selectedProductCategories: Array<any>;\r\n  selectedProductCategoryChildren: Array<any>;\r\n  ProductCategoryTypeIds: Array<number>\r\n\r\n  headerRow = ['S.No.', 'Name', 'User Name', 'Email', 'Phone No', 'Specialization', 'Action']\r\n  addressTypeOptions = ['Home', 'Office', 'Permanent'];\r\n\r\n  currentId: number;\r\n  searchText:any;\r\n  dataRows: any;\r\n  imgfile: any;\r\n  productCategory: any\r\n  pins: any;\r\n  currentRow: any;\r\n  searchPin:any\r\n  urlTOShowImg: string;\r\n\r\n  engineerDetails = new EngineerDetails\r\n\r\n  constructor(\r\n    private tostservice: TostService,\r\n    private engineerService: ServiceEngineerService,\r\n  ) { }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.getEngineers();\r\n    this.getPincodes();\r\n\r\n    this.getProductCategorys();\r\n  }\r\n\r\n\r\n\r\n  // get engineers from server\r\n  getEngineers() {\r\n    this.engineerService.getEngineer()\r\n      .subscribe((res: any) => {\r\n        this.dataRows = res;\r\n\r\n        this.isDataLoad = false;\r\n\r\n      },\r\n        (err) => {\r\n\r\n          this.tostservice.showNotificationFailure(err)\r\n        })\r\n  }\r\n\r\n\r\n  // get pincodes from server\r\n  getPincodes() {\r\n    this.engineerService.getPincode()\r\n      .subscribe((res: any) => {\r\n        this.pins = res;\r\n        res.forEach(element => {\r\n\r\n          this.editpins.push(element.pincode);\r\n          this.pinIstrue = false;\r\n        });\r\n\r\n\r\n      },\r\n        (err) => {\r\n          this.tostservice.showNotificationFailure(err)\r\n        })\r\n  }\r\n\r\n\r\n  //  get product category from  serve\r\n  getProductCategorys() {\r\n    this.engineerService.getProductCategory()\r\n      .subscribe((res: any) => {\r\n        this.productCategory = res;\r\n        this.selectedProductCategories = res[0];\r\n\r\n\r\n      },\r\n        (err) => {\r\n          this.tostservice.showNotificationFailure(err)\r\n        })\r\n  }\r\n\r\n\r\n  // get product sub category  on the bases of selected product category\r\n  onProductTypeIdChange() {\r\n    if (this.selectedProductCategories) {\r\n      this.selectedProductCategoryChildren = [];\r\n      this.selectedProductCategories.forEach(product => {\r\n        this.selectedProductCategoryChildren = this.selectedProductCategoryChildren.concat(product.childCategory);\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  //  function trigger when table row click  and store the data related to row\r\ntypeName=[];\r\n  setId(row) {\r\n    this.assignpincode = []\r\n    this.assignedProductTypeId = [];\r\n    this.assignedProductType = []\r\n    this.selectedProductCategories = [];\r\n    this.selectedProductCategoryChildren = [];\r\n    this.productType = [];\r\n\r\n    this.currentRow = row;\r\n    this.addCatShow = false;\r\n    this.removeCatShow = false;\r\n    this.editPinShow = false;\r\n    this.assignedProductType = row.productTypes.slice(0);\r\n    this.assignedProductType.forEach(element => {\r\n      this.assignedProductTypeId.push(element.id)\r\n      this.typeName.push(element.name)\r\n    });\r\n\r\n    this.currentId = row.id;\r\n\r\n    this.assignpincode = row.assignPincodes.slice(0);\r\n\r\n    this.filterPincode();\r\n\r\n  }\r\n\r\n\r\n  // delete engineer\r\n  deleteEngineer() {\r\n    this.engineerService.deleteEngineer(this.currentId)\r\n      .subscribe((res: any) => {\r\n        this.tostservice.showNotificationSuccess(\"Service Engineer Delete Successfuly\")\r\n      }, (err) => {\r\n        this.tostservice.showNotificationFailure(err)\r\n      })\r\n  }\r\n\r\n\r\n  // get product type id from server on the bases of selected category or sub category\r\n  getProdutId() {\r\n    this.engineerService.getProductTypeIds(this.ProductCategoryTypeIds)\r\n      .subscribe((res: any) => {\r\n        this.productType = res\r\n        console.log(res)\r\n      })\r\n  }\r\n\r\n\r\n  //  for  img upload\r\n  onSelectFile(event) { // called each time file input changes\r\n    if (event.target.files && event.target.files[0]) {\r\n      var reader = new FileReader();\r\n      this.imgfile = event.target.files[0];\r\n      reader.readAsDataURL(event.target.files[0]); // read file as data url\r\n\r\n      reader.onload = (event: any) => { // called once readAsDataURL is completed\r\n        this.urlTOShowImg = event.target.result;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // creat a new engineer \r\n\r\n  creatEngineer() {\r\n\r\n    this.loadingButton = true;\r\n    const fd = new FormData();\r\n\r\n    for (const key in this.engineerDetails) {\r\n      if (key == \"address\") {\r\n        for (const key1 in this.engineerDetails.address) {\r\n          fd.append(key + \".\" + key1, this.engineerDetails.address[key1])\r\n        }\r\n      } else {\r\n        fd.append(key, this.engineerDetails[key]);\r\n      }\r\n    }\r\n\r\n    if (this.imgfile) {\r\n\r\n      fd.append(\"pic\", this.imgfile);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    this.engineerService.addEngineer(fd)\r\n      .subscribe((res: any) => {\r\n        this.resetform();\r\n        this.loadingButton = false;\r\n\r\n        this.closeEngineerFormModal();\r\n        this.dataRows.unshift(res);\r\n        this.tostservice.showNotificationSuccess(\"Service Engineer Creat Successfuly\")\r\n      }, (err) => {\r\n        this.loadingButton = false;\r\n\r\n        this.tostservice.showNotificationFailure(err)\r\n\r\n      })\r\n\r\n\r\n  }\r\n\r\n\r\n  ////////////////pincode Change start here////////////////\r\n\r\n  showEditPin() {\r\n    this.editPinShow = true;\r\n    this.filterPincode();\r\n  }\r\n\r\n\r\n  removePincode(pin) {\r\n    this.assignpincode = this.assignpincode.filter(element => element != pin);\r\n    this.editpins.push(pin);\r\n  }\r\n\r\n\r\n  addPin(pin) {\r\n    this.editpins = this.editpins.filter(element => element != pin)\r\n    this.assignpincode.push(pin);\r\n\r\n  }\r\n\r\n\r\n  filterPincode() {\r\n    this.editpins = this.editpins.filter(element => this.assignpincode.indexOf(element) == -1);\r\n  }\r\n\r\n\r\n  canclePinchanges(row) {\r\n    this.assignpincode = [];\r\n    this.assignpincode = row.assignPincodes.slice(0);\r\n    console.log(row)\r\n    this.editpins = [];\r\n    this.pins.forEach(element => {\r\n\r\n      this.editpins.push(element.pincode);\r\n    });\r\n    this.filterPincode();\r\n    this.editPinShow = false;\r\n\r\n  }\r\n\r\n\r\n  changePincode() {\r\n    this.pinChangeSuccessfuly = true;\r\n    console.log(this.assignpincode)\r\n\r\n    this.engineerService.editPincodes({ \"pincodes\": this.assignpincode, \"serviceEngineerId\": this.currentId })\r\n      .subscribe((res: any) => {\r\n        this.pinChangeSuccessfuly = false;\r\n        this.editPinShow = false;\r\n        this.filterPincode();\r\n\r\n        console.log(res);\r\n        this.tostservice.showNotificationSuccess(\"change successfuly\")\r\n        this.engineerService.getEngineer()\r\n          .subscribe((res: any) => {\r\n            this.dataRows = res.slice(0)\r\n          }, (err) => {\r\n\r\n          })\r\n      }, (err) => {\r\n        this.pinChangeSuccessfuly = false;\r\n        this.tostservice.showNotificationFailure(err)\r\n      })\r\n  }\r\n\r\n  //////////////pincode change end here/////////////\r\n\r\n\r\n\r\n\r\n  //////////product category change start here///////\r\n\r\n  editProductCategory(value?) {\r\n\r\n    this.getProductCategorys();\r\n    if (value === 'add') {\r\n      this.addCatShow = true;\r\n    }\r\n    if (value === 'remove') {\r\n      this.removeCatShow = true;\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  removeCategory(type) {\r\n    this.assignedProductType = this.assignedProductType.filter(element => element.id != type.id);\r\n    this.assignedProductTypeId = this.assignedProductTypeId.filter(element => element != type.id);\r\n\r\n  }\r\n\r\n\r\n  cancleChange() {\r\n    this.setId(this.currentRow);\r\n    this.assignedProductType = this.currentRow.productTypes.slice(0);\r\n    this.addCatShow = false;\r\n    this.removeCatShow = false;\r\n    this.addCategoryTypeId = []\r\n  }\r\n\r\n\r\n  changeCategory() {\r\n    this.categoryChangeSuccessfuly = true;\r\n\r\n    let tempArray: any\r\n\r\n    tempArray = this.assignedProductTypeId.filter(element => this.addCategoryTypeId.indexOf(element) == -1).concat(this.addCategoryTypeId);\r\n    console.log(this.assignedProductTypeId);\r\n    console.log(tempArray);\r\n\r\n    console.log(this.addCategoryTypeId);\r\n\r\n    this.engineerService.editProductCategoryType(tempArray, this.currentId)\r\n      .subscribe((res: any) => {\r\n        this.addCatShow = false;\r\n        this.removeCatShow = false;\r\n        this.categoryChangeSuccessfuly = false\r\n        this.tostservice.showNotificationSuccess();\r\n\r\n\r\n        this.engineerService.getEngineer()\r\n          .subscribe((res: any) => {\r\n            this.dataRows = res.slice(0)\r\n          }, (err) => {\r\n\r\n          })\r\n\r\n      }, (err) => {\r\n        this.categoryChangeSuccessfuly = false;\r\n        this.tostservice.showNotificationFailure(err)\r\n      })\r\n\r\n\r\n  }\r\n\r\n\r\n  /////////product categor ends here////////////\r\n\r\n\r\n  // reset engineer form\r\n\r\n  resetform() {\r\n\r\n    this.imgfile = null;\r\n    this.engineerDetails = new EngineerDetails();\r\n  }\r\n\r\n\r\n  closeEngineerFormModal() {\r\n    $('#EngineerFormModal').modal('hide')\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ServiceEngineerComponent } from './service-engineer.component';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PipeModule } from '../../providers/pipe.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PipeModule,\n    RouterModule.forChild([\n      {path:'',component:ServiceEngineerComponent,},\n    \n    ])   \n  ],\n  declarations: [\n    ServiceEngineerComponent,\n    \n  ]\n})\nexport class ServiceEngineerModule { }\n","import { Injectable } from '@angular/core';\nimport { CustomHttpService } from '../../providers/custom-http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceEngineerService {\n\n  constructor(private customHttp: CustomHttpService) { }\n\n\n\n\n\n  //add engineer\n  addEngineer(fd) {\n    return this.customHttp.post(\"/sa/service-engineer\", fd)\n\n  }\n\n\n  // get pincodes from server\n  getPincode() {\n    return this.customHttp.get(\"/sa/pincode-detail\")\n  }\n\n\n\n  // get product category from server\n  getProductCategory() {\n    return this.customHttp.get(\"/sa/product-category\")\n  }\n\n\n  // get product type id from server\n  getProductTypeIds(ids: Array<number>) {\n    const idss = ids.join(',');\n\n    return this.customHttp.get(`/sa/product-type?categoryIds=${idss}`)\n  }\n\n\n\n\n\n  //get service engineer details  from server \n  getEngineer() {\n\n    return this.customHttp.get(\"/sa/service-engineer\")\n\n\n  }\n\n\n  //  delete engineer\n  deleteEngineer(delete_id) {\n    return this.customHttp.delete(`/sa/service-engineer/${delete_id}`)\n  }\n\n\n  // change pincode of engineer\n  editPincodes(fd) {\n    return this.customHttp.post(`/sa/pincode-service-engineer`, fd)\n  }\n\n\n  // change product type id of engineer\n  editProductCategoryType(fd, id) {\n    return this.customHttp.post(`/sa/product-type-service-engineer`, { \"productTypeIds\": fd, \"serviceEngineerId\": id })\n  }\n\n\n\n}\n","export class EngineerDetails {\r\n    name:string;\r\n    username: string;\r\n    password: string;\r\n    contactNo:number;\r\n    email:string;\r\n    specialist:string;\r\n    pic?:any;\r\n    userType=\"ServiceEngineer\";\r\n    productTypeIds:Array<number>;\r\n       address={\r\n        address:\"\",\r\n        city:\"\",\r\n        state:\"\",\r\n        country:\"\",\r\n        postalCode:\"\",\r\n        addressType:\"\",\r\n                }\r\n    pincodes:Array<number>=[];\r\n            }","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe(\r\n  {\r\n    name: 'filterSearch'\r\n  }\r\n)\r\nexport class FilterSearch implements PipeTransform {\r\n    transform(items: Array<any>, searchText: string): any[] {\r\n        if(!items) return [];\r\n        if(!searchText) return items;\r\n    searchText = searchText.toLowerCase();\r\n  \r\n   \r\n   if (items[0].name) {\r\n    return items.filter( element => {\r\n      return element.name.toLowerCase().includes(searchText);\r\n    });\r\n   } else {\r\n    return items.filter( element => {\r\n      return element.toLowerCase().includes(searchText);\r\n    });\r\n   }\r\n       }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe(\r\n  {\r\n    name: 'fixedLength'\r\n  }\r\n)\r\nexport class FixedLengthPipe implements PipeTransform {\r\n  transform(value: string): string {\r\n    if (value.length > 15) {\r\n      value = value.substring(0, 15) + \"...\";\r\n    }\r\n    return value;\r\n  }\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FixedLengthPipe } from './length.pipe';\nimport { FilterSearch } from './filter.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    FixedLengthPipe,\n    FilterSearch\n  ],\n  exports:[FixedLengthPipe,FilterSearch],\n})\nexport class PipeModule { }\n"],"sourceRoot":""}